/**
 * Copyright: Copyright (c) 2017/9/5 Asiainfo
 *
 * @ClassName: package-info
 * @Description: 该类的功能描述
 * @version: v1.0.0
 * @author: xuxiao
 * @date: 2017/9/5 20:37
 * Modification History:
 * Date         Author          Version            Description
 * ------------------------------------------------------------
 * 2017/9/5     xuxiao          v1.1.0               修改原因
 */
package com.xuxiao.designpattern.adapter.defaultadapter;
/**
 * 缺省适配模式
 * 缺省适配模式可以很好的处理这一情况。可以设计一个抽象的适配器类实现接口，
 * 此抽象类要给接口所要求的每一种方法都提供一个空的 方法。就像具体帮助类汤
 * 高一样 他只实现某一部分功能 因为他只用到了某一部分功能而已，如果以后要用
 * ，再实现其他功能就是，但是今天他不用，就没必要该功能了！

 适配器模式的用意是要改变源的接口，以便于目标接口相容。缺省适配的用意稍有不
 同，它是为了方便建立一个不平庸的适配器类而提供的一种平庸实现。

 在任何时候，如果不准备实现一个接口的所有方法时，就可以使用“缺省适配模式”
 制造一个抽象类，给出所有方法的平庸的具体实现。这样，从这个抽象类再继承下
 去的子类就不必实现所有的方法了
 */